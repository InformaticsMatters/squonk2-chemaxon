---
# Tools using the Chemistry Development Kit
kind: DataManagerJobDefinition
kind-version: '2021.1'
name: ChemAxon molecular properties
collection: chemaxon

jobs:
  chemaxon-molecular-props-simple:
    name: ChemAxon simple molecular properties
    description: >-
      Calculate molecular properties using ChemAxon tools.
    version: '1.0.0'
    category: molecular properties
    keywords:
    - chemaxon
    - properties
    - atomcount
    - bondcount
    - ringcount
    - logp
    - logd
    - hbd
    - hba
    - h-bond
    - hbond
    - tpsa
    - pka
    image:
      name: informaticsmatters/squonk2-chemaxon
      tag: latest
      project-directory: /data
      working-directory: /data
      fix-permissions: true
      file:
      - name: /usr/local/license.cxl
        content-from:
          account-server-asset:
            name: chemaxon-license-file
      environment:
      - name: CHEMAXON_LICENSE_URL
        value-from:
          constant:
            value: /usr/local/license.cxl
    # The container has no entrypoint so this is the command that is executed.
    # The CLASSPATH environment variable in the container is set.
    command: >-
      java squonk.jobs.chemaxon.SimpleCalcs
      --input '{{ inputFile }}'
      --output '{{ outputFile }}'
      {% if header is defined and header %}--header {{ header }}{% endif %}
      {% if molecularWeight is defined and molecularWeight %}--molecularWeight{% endif %}
      {% if molecularFormula is defined and molecularFormula %}--molecularFormula{% endif %}
      {% if atomCount is defined and atomCount %}--atomCount{% endif %}
      {% if heavyAtomCount is defined and heavyAtomCount%}--heavyAtomCount{% endif %}
      {% if bondCount is defined and bondCount %}--bondCount{% endif %}
      {% if logp is defined and logp %}--logp{% endif %}
      {% if logd is defined and logd %}--logd{% endif %}
      {% if hbaCount is defined and hbaCount %}--hba-count{% endif %}
      {% if hbdCount is defined and hbdCount %}--hbd-count{% endif %}
      {% if hbaSites is defined and hbaSites %}--hba-sites{% endif %}
      {% if hbdSites is defined and hbdSites %}--hbd-sites{% endif %}
      {% if ringCount is defined and ringCount %}--ringCount{% endif %}
      {% if ringAtomCount is defined and ringAtomCount %}--ringAtomCount{% endif %}
      {% if aromaticRingCount is defined and aromaticRingCount %}--aromaticRingCount{% endif %}
      {% if aromaticAtomCount is defined and aromaticAtomCount %}--aromaticAtomCount{% endif %}
      {% if rotatableBondCount is defined and rotatableBondCount %}--rotatableBondCount{% endif %}
      {% if tpsa is defined and tpsa %}--tpsa{% endif %}
      {% if apka is defined and apka %}--acidic-pka{% endif %}
      {% if bpka is defined and bpka %}--basic-pka{% endif %}
    variables:
      order:
        options:
        - outputFile
        - header
        - molecularWeight
        - molecularFormula
        - atomCount
        - heavyAtomCount
        - bondCount
        - logp
        - logd
        - hbdCount
        - hbaCount
        - hbdSites
        - hbaSites
        - ringCount
        - ringAtomCount
        - aromaticRingCount
        - aromaticAtomCount
        - rotatableBondCount
        - tpsa
        - apka
        - bpka
      inputs:
        type: object
        required:
        - inputFile
        properties:
          inputFile:
            title: Input molecules
            mime-types:
            - chemical/x-mdl-sdfile
            - squonk/x-smiles
            - text/csv
            type: molecules-smi
      outputs:
        type: object
        properties:
          results:
            title: Output file name
            mime-types:
            - chemical/x-mdl-sdfile
            creates: '{{ outputFile }}'
            type: file
            annotation-properties:
              fields-descriptor:
                origin: squonk2-job
                description: ChemAxon simple molecular properties
                fields:
                  CXN_molecularWeight:
                    type: number
                    description: Molecular weight
                    required: false
                    active: true
                  CXN_molecularFormula:
                    type: string
                    description: Molecular formula
                    required: false
                    active: true
                  CXN_atomCount:
                    type: integer
                    description: Atom count
                    required: false
                    active: true
                  CXN_heavyAtomCount:
                    type: number
                    description: Heavy atom count
                    required: false
                    active: true
                  CXN_bondCount:
                    type: integer
                    description: Bond count
                    required: false
                    active: true
                  CXN_cLogp:
                    type: number
                    description: cLogP
                    required: false
                    active: true
                  CXN_logD:
                    type: number
                    description: logD at pH 7.4
                    required: false
                    active: true
                  CXN_donorCount:
                    type: integer
                    description: H-bond donor count
                    required: false
                    active: true
                  CXN_acceptorCount:
                    type: integer
                    description: H-bond acceptor count
                    required: false
                    active: true
                  CXN_donorSites:
                    type: integer
                    description: H-bond donor sites
                    required: false
                    active: true
                  CXN_acceptorSites:
                    type: integer
                    description: H-bond acceptor sites
                    required: false
                    active: true
                  CXN_ringCount:
                    type: integer
                    description: Ring count
                    required: false
                    active: true
                  CXN_ringAtomCount:
                    type: integer
                    description: Ring atom count
                    required: false
                    active: true
                  CXN_aromaticRingCount:
                    type: integer
                    description: Aromatic ring count
                    required: false
                    active: true
                  CXN_aromaticAtomCount:
                    type: integer
                    description: Aromatic atom count
                    required: false
                    active: true
                  CXN_rotatableBondCount:
                    type: integer
                    description: Rotatable bond count
                    required: false
                    active: true
                  CXN_tpsa:
                    type: number
                    description: Topological polar surface area
                    required: false
                    active: true
                  CXN_aPKa:
                    type: number
                    description: Most acidic pKa
                    required: false
                    active: true
                  CXN_bPKa:
                    type: number
                    description: Most basic pKa
                    required: false
                    active: true
              service-execution:
                service_ref: 'https://discourse.squonk.it/t/job-cdk-molecular-descriptors/126'
              derived-from: inputFile
      options:
        type: object
        required:
        - outputFile
        properties:
          outputFile:
            title: Output file (.sdf or .smi)
            type: string
            default: output-cxn-molprops.sdf
            pattern: "^[A-Za-z0-9_/\\.\\-]+$"
          header:
            title: Include header for .smi output
            type: boolean
            default: true
          molecularWeight:
            title: Calculate molecular weight
            type: boolean
            default: true
          molecularFormula:
            title: Calculate molecular formula
            type: boolean
            default: true
          atomCount:
            title: Calculate atom count
            type: boolean
            default: true
          heavyAtomCount:
            title: Calculate heavy atom count
            type: boolean
            default: true
          bondCount:
            title: Calculate bond count
            type: boolean
            default: true
          logp:
            title: Calculate LogP
            type: boolean
            default: true
          logd:
            title: Calculate LogD at ph 7.4
            type: boolean
            default: true
          hbdCount:
            title: Calculate H-bond donor count
            type: boolean
            default: true
          hbaCount:
            title: Calculate H-bond acceptor count
            type: boolean
            default: true
          hbdSites:
            title: Calculate H-bond donor sites
            type: boolean
            default: true
          hbaSites:
            title: Calculate H-bond acceptor sites
            type: boolean
            default: true
          ringCount:
            title: Calculate ring count
            type: boolean
            default: true
          ringAtomCount:
            title: Calculate ring atom count
            type: boolean
            default: true
          aromaticRingCount:
            title: Calculate aromatic ring count
            type: boolean
            default: true
          aromaticAtomCount:
            title: Calculate aromatic atom count
            type: boolean
            default: true
          rotatableBondCount:
            title: Calculate rotatable bond count
            type: boolean
            default: true
          tpsa:
            title: Calculate topological polar surface area
            type: boolean
            default: true
          apka:
            title: Calculate most acidic pKa
            type: boolean
            default: true
          bpka:
            title: Calculate most basic pKa
            type: boolean
            default: true
    tests:
      simple-execution:
        inputs:
          inputFile: data/dhfr_3d-10.sdf
        options:
          outputFile: foo/cxn-predictions.sdf
          molecularWeight: true
          molecularFormula: true
          atomCount: true
          heavyAtomCount: true
          bondCount: true
          logp: true
          logd: true
          hbaCount: true
          hbdCount: true
          hbaSites: true
          hbdSites: true
          ringCount: true
          ringAtomCount: true
          aromaticRingCount: true
          aromaticAtomCount: true
          rotatableBondCount: true
          tpsa: true
          apka: true
          bpka: true
        checks:
          exitCode: 0
          outputs:
          - name: foo/cxn-predictions.sdf
            checks:
            - exists: true

  chemaxon-molecular-multi-calc:
    name: ChemAxon molecular properties
    description: >-
      Calculate molecular properties using ChemAxon tools.
    version: '1.0.0'
    category: molecular properties
    keywords:
    - chemaxon
    - properties
    - atomcount
    - bondcount
    - ringcount
    - logp
    - logd
    - hbd
    - hba
    - h-bond
    - hbond
    - tpsa
    - pka
    - bbb
    - mpo
    image:
      name: informaticsmatters/squonk2-chemaxon
      tag: latest
      project-directory: /data
      working-directory: /data
      fix-permissions: true
      file:
      - name: /usr/local/license.cxl
        content-from:
          account-server-asset:
            name: chemaxon-license-file
      environment:
      - name: CHEMAXON_LICENSE_URL
        value-from:
          constant:
            value: /usr/local/license.cxl
    # The container has no entrypoint so this is the command that is executed.
    # The CLASSPATH environment variable in the container is set.
    command: >-
      java squonk.jobs.chemaxon.MultiCalc
      --input '{{ inputFile }}'
      --output '{{ outputFile }}'
      {% if header is defined and header %}--header {{ header }}{% endif %}
      --calculators '{% for calc in calculators.split() %} {{ calc }}{% endfor %}'
    variables:
      order:
        options:
        - outputFile
        - header
        - calculators
      inputs:
        type: object
        required:
        - inputFile
        properties:
          inputFile:
            title: Input molecules
            mime-types:
            - chemical/x-mdl-sdfile
            - squonk/x-smiles
            - text/csv
            type: molecules-smi
      outputs:
        type: object
        properties:
          results:
            title: Output file name
            mime-types:
            - chemical/x-mdl-sdfile
            creates: '{{ outputFile }}'
            type: file
            annotation-properties:
              fields-descriptor:
                origin: squonk2-job
                description: ChemAxon simple molecular properties
                fields:
                  CXN_molecularWeight:
                    type: number
                    description: Molecular weight
                  CXN_molecularFormula:
                    type: string
                    description: Molecular formula
                  CXN_atomCount:
                    type: integer
                    description: Atom count
                  CXN_heavyAtomCount:
                    type: number
                    description: Heavy atom count
                  CXN_bondCount:
                    type: integer
                    description: Bond count
                  CXN_cLogp:
                    type: number
                    description: cLogP
                  CXN_logD:
                    type: number
                    description: logD at pH 7.4
                  CXN_donorCount:
                    type: integer
                    description: H-bond donor count
                  CXN_acceptorCount:
                    type: integer
                    description: H-bond acceptor count
                  CXN_donorSites:
                    type: integer
                    description: H-bond donor sites
                  CXN_acceptorSites:
                    type: integer
                    description: H-bond acceptor sites
                  CXN_ringCount:
                    type: integer
                    description: Ring count
                  CXN_ringAtomCount:
                    type: integer
                    description: Ring atom count
                  CXN_aromaticRingCount:
                    type: integer
                    description: Aromatic ring count
                  CXN_aromaticAtomCount:
                    type: integer
                    description: Aromatic atom count
                  CXN_rotatableBondCount:
                    type: integer
                    description: Rotatable bond count
                  CXN_tpsa:
                    type: number
                    description: Topological polar surface area
                  CXN_aPKa:
                    type: number
                    description: Most acidic pKa
                  CXN_bPKa:
                    type: number
                    description: Most basic pKa
                  Gupta_BBB:
                    type: number
                    description: Gupta BBB prediction
                  Pfizer_CNS_MPO:
                    type: number
                    description: Pfizer CNS MPO prediction
                  Abbvie_MPS:
                    type: number
                    description: Abbvie MPS prediction
                  KIDS_MPO:
                    type: number
                    description: KIDS MPO prediction
              derived-from: inputFile
      options:
        type: object
        required:
        - outputFile
        - calculators
        properties:
          outputFile:
            title: Output file (.sdf or .smi)
            type: string
            default: output-cxn-molprops.sdf
            pattern: "^[A-Za-z0-9_/\\.\\-]+$"
          header:
            title: Include header for .smi output
            type: boolean
            default: true
          calculators:
            title: Calculators
            type: array
            items:
              type: string
              oneOf:
              - const: abbvie-mps
                title: Abbvie MPS score
              - const: aromatic-atom-count
                title: Aromatic atom count
              - const: aromatic-ring-count
                title: Aromatic ring count
              - const: atom-count
                title: Atom count
              - const: bond-count
                title: Bond count
              - const: gupta-bbb
                title: Gupta BBB score
              - const: hba-count
                title: H-bond acceptor count
              - const: hba-sites
                title: H-bond acceptor sites
              - const: hbd-count
                title: H-bond donor count
              - const: hbd-sites
                title: H-bond donor sites
              - const: heavy-atom-count
                title: Heavy atom count
              - const: kids-mpo
                title: KIDS MPO score
              - const: logp
                title: logP
              - const: logd
                title: logD @ pH7.4
              - const: molecular-formula
                title: Mol formula
              - const: molecular-weight
                title: Mol weight
              - const: pfizer-cns-mpo
                title: Pfizer CNS MPO score
              - const: acidic-pka
                title: pKa (acidic)
              - const: basic-pka
                title: pKa (basic)
              - const: ring-count
                title: Ring count
              - const: ring-atom-count
                title: Ring atom count
              - const: rotatable-bond-count
                title: Rotatable bond count
              - const: tpsa
                title: Topological polar surface area
    tests:
      simple-execution:
        inputs:
          inputFile: data/dhfr_3d-10.sdf
        options:
          outputFile: foo/cxn-predictions.sdf
          calculators: molecular-weight molecular-formula atom-count heavy-atom-count bond-count logp logd hba-count hbd-count hba-sites hbd-sites ring-count ring-atom-count aromatic-ring-count aromatic-atom-count rotatable-bond-count tpsa acidic-pka basic-pka gupta-bbb pfizer-cns-mpo abbvie-mps kids-mpo
        checks:
          exitCode: 0
          outputs:
          - name: foo/cxn-predictions.sdf
            checks:
            - exists: true

  chemaxon-molecular-props-logd:
    name: ChemAxon logD calculator
    description: >-
      Calculate logD using ChemAxon tools.
    version: '1.0.0'
    category: molecular properties
    keywords:
    - chemaxon
    - properties
    - logd
    - partitioning
    image:
      name: informaticsmatters/squonk2-chemaxon
      tag: latest
      project-directory: /data
      working-directory: /data
      fix-permissions: true
      file:
      - name: /usr/local/license.cxl
        content-from:
          account-server-asset:
            name: chemaxon-license-file
      environment:
      - name: CHEMAXON_LICENSE_URL
        value-from:
          constant:
            value: /usr/local/license.cxl
    # The container has no entrypoint so this is the command that is executed.
    # The CLASSPATH environment variable in the container is set.
    command: >-
      java squonk.jobs.chemaxon.LogDCalc
      --input '{{ inputFile }}'
      --output '{{ outputFile }}'
      {% if header is defined %}--header {{ header }}{% endif %}
      --ph {{ ph }}
      {% if mode is defined %}--mode {{ mode }}{% endif %}
      {% if minValue is defined %}--min-value {{ minValue }}{% endif %}
      {% if maxValue is defined %}--max-value {{ maxValue }}{% endif %}
    variables:
      order:
        options:
        - outputFile
        - header
        - ph
        - mode
        - minValue
        - maxValue
      inputs:
        type: object
        required:
        - inputFile
        properties:
          inputFile:
            title: Input molecules
            mime-types:
            - chemical/x-mdl-sdfile
            - squonk/x-smiles
            - text/csv
            type: molecules-smi
      outputs:
        type: object
        properties:
          results:
            title: Output file name
            mime-types:
            - chemical/x-mdl-sdfile
            creates: '{{ outputFile }}'
            type: file
            annotation-properties:
              fields-descriptor:
                origin: squonk2-job
                description: ChemAxon logD calculator
                fields:
                  CXN_logD:
                    expression: 'CXN_logD (pH {{ ph }})'
                    type: number
                    description: >-
                      logD at pH {{ ph }}
                    required: true
                    active: true
              service-execution:
                service_ref: 'https://discourse.squonk.it/t/job-cdk-molecular-descriptors/126'
              derived-from: inputFile
      options:
        type: object
        required:
        - outputFile
        - ph
        properties:
          outputFile:
            title: Output file (.sdf or .smi)
            type: string
            default: output-cxn-logd.sdf
            pattern: "^[A-Za-z0-9_/\\.\\-]+$"
          header:
            title: Include header for .smi output
            type: boolean
            default: true
          ph:
            title: pH
            type: number
            default: 7.4
            minimum: 0
            maximum: 14
          mode:
            title: Filter mode
            type: string
            default: none
            enum:
            - none
            - pass
            - fail
          minValue:
            title: Min value
            type: number
          maxValue:
            title: Max value
            type: number
    tests:
      simple-execution:
        inputs:
          inputFile: data/dhfr_3d-10.sdf
        options:
          outputFile: foo/cxn-logd.sdf
          ph: 6.6
          minValue: 2.5
        checks:
          exitCode: 0
          outputs:
          - name: foo/cxn-logd.sdf
            checks:
            - exists: true

  chemaxon-molecular-props-pka:
    name: ChemAxon pKa calculator
    description: >-
      Calculate most acidic and basic pKa values using ChemAxon tools.
    version: '1.0.0'
    category: molecular properties
    keywords:
    - chemaxon
    - properties
    - pka
    image:
      name: informaticsmatters/squonk2-chemaxon
      tag: latest
      project-directory: /data
      working-directory: /data
      fix-permissions: true
      file:
      - name: /usr/local/license.cxl
        content-from:
          account-server-asset:
            name: chemaxon-license-file
      environment:
      - name: CHEMAXON_LICENSE_URL
        value-from:
          constant:
            value: /usr/local/license.cxl
    # The container has no entrypoint so this is the command that is executed.
    # The CLASSPATH environment variable in the container is set.
    command: >-
      java squonk.jobs.chemaxon.PKaCalc
      --input '{{ inputFile }}'
      --output '{{ outputFile }}'
      {% if header is defined and header %}--header {{ header }}{% endif %}
      {% if acidic is defined and acidic %}--acidic{% endif %}
      {% if basic is defined and basic %}--basic{% endif %}
      {% if count is defined %}--count {{ count }}{% endif %}
      {% if temperature is defined %}--temperature {{ temperature }}{% endif %}
      {% if minBasic is defined %}--min-basic {{ minBasic }}{% endif %}
      {% if maxAcidic is defined %}--max-acidic {{ maxAcidic }}{% endif %}
    variables:
      order:
        options:
        - outputFile
        - header
        - acidic
        - basic
        - count
        - temperature
        - minBasic
        - maxAcidic
      inputs:
        type: object
        required:
        - inputFile
        properties:
          inputFile:
            title: Input molecules
            mime-types:
            - chemical/x-mdl-sdfile
            - squonk/x-smiles
            - text/csv
            type: molecules-smi
      outputs:
        type: object
        properties:
          results:
            title: Output file name
            mime-types:
            - chemical/x-mdl-sdfile
            creates: '{{ outputFile }}'
            type: file
            annotation-properties:
              fields-descriptor:
                origin: squonk2-job
                description: ChemAxon logD calculator
                fields:
                  CXN_aPka:
                    type: number
                    description: >-
                      Most acidic pKa
                    required: false
                    active: true
                  CXN_bPka:
                    type: number
                    description: >-
                      Most basic pKa
                    required: false
                    active: true
              service-execution:
                service_ref: 'https://discourse.squonk.it/t/job-cdk-molecular-descriptors/126'
              derived-from: inputFile
      options:
        type: object
        required:
        - outputFile
        - acidic
        - basic
        - count
        properties:
          outputFile:
            title: Output file (.sdf or .smi)
            type: string
            default: output-cxn-pka.sdf
            pattern: "^[A-Za-z0-9_/\\.\\-]+$"
          header:
            title: Include header for .smi output
            type: boolean
            default: true
          acidic:
            title: Calculate acidic pKa
            type: boolean
            default: true
          basic:
            title: Calculate basic pKa
            type: boolean
            default: true
          count:
            title: Number of pKas to calculate
            type: integer
            default: 3
          temperature:
            title: Temperature (K)
            type: number
            default: 298
          minBasic:
            title: Minimum basic pKa
            type: number
            default: -2.0
          maxAcidic:
            title: Maximum acidic pKa
            type: number
            default: 16
    tests:
      simple-execution:
        inputs:
          inputFile: data/dhfr_3d-10.sdf
        options:
          outputFile: foo/cxn-pka.sdf
          acidic: true
          basic: true
        checks:
          exitCode: 0
          outputs:
          - name: foo/cxn-pka.sdf
            checks:
            - exists: true

  chemaxon-gupta-bbb:
    name: Gupta BBB
    description: >-
      Blood brain barrier prediction using the Gupta method and ChemAxon tools.
    version: '1.0.0'
    category: molecular properties
    keywords:
    - chemaxon
    - properties
    - bbb
    image:
      name: informaticsmatters/squonk2-chemaxon
      tag: latest
      project-directory: /data
      working-directory: /data
      fix-permissions: true
      file:
      - name: /usr/local/license.cxl
        content-from:
          account-server-asset:
            name: chemaxon-license-file
      environment:
      - name: CHEMAXON_LICENSE_URL
        value-from:
          constant:
            value: /usr/local/license.cxl
    # The container has no entrypoint so this is the command that is executed.
    # The CLASSPATH environment variable in the container is set.
    command: >-
      java squonk.jobs.chemaxon.GuptaBBBCalc
      --input '{{ inputFile }}'
      --output '{{ outputFile }}'
      {% if header is defined %}--header {{ header }}{% endif %}
      {% if mode is defined %}--mode {{ mode }}{% endif %}
      {% if minValue is defined %}--min-value {{ minValue }}{% endif %}
      {% if maxValue is defined %}--max-value {{ maxValue }}{% endif %}
    variables:
      order:
        options:
        - outputFile
        - header
        - mode
        - minValue
        - maxValue
      inputs:
        type: object
        required:
        - inputFile
        properties:
          inputFile:
            title: Input molecules
            mime-types:
            - chemical/x-mdl-sdfile
            - squonk/x-smiles
            - text/csv
            type: molecules-smi
      outputs:
        type: object
        properties:
          results:
            title: Output file name
            mime-types:
            - chemical/x-mdl-sdfile
            creates: '{{ outputFile }}'
            type: file
            annotation-properties:
              fields-descriptor:
                origin: squonk2-job
                description: Gupta BBB prediction
                fields:
                  Gupta_BBB:
                    type: number
                    description: Gupta BBB prediction
                    required: false
                    active: true
              service-execution:
                service_ref: 'https://discourse.squonk.it/t/job-cdk-molecular-descriptors/126'
              derived-from: inputFile
      options:
        type: object
        required:
        - outputFile
        properties:
          outputFile:
            title: Output file (.sdf or .smi)
            type: string
            default: output-gupta-bbb.sdf
            pattern: "^[A-Za-z0-9_/\\.\\-]+$"
          header:
            title: Include header for .smi output
            type: boolean
            default: true
          mode:
            title: Filter mode
            type: string
            default: none
            enum:
            - none
            - pass
            - fail
          minValue:
            title: Min value
            type: number
          maxValue:
            title: Max value
            type: number
    tests:
      simple-execution:
        inputs:
          inputFile: data/dhfr_3d-10.sdf
        options:
          outputFile: foo/gupta-bbb.sdf
          mode: pass
          minValue: 4
          maxValue: 6
        checks:
          exitCode: 0
          outputs:
          - name: foo/gupta-bbb.sdf
            checks:
            - exists: true

  chemaxon-abbvie-mps:
    name: Abbvie MPS
    description: >-
      Abbvie multiparametric score prediction using ChemAxon tools.
    version: '1.0.0'
    category: molecular properties
    keywords:
    - chemaxon
    - properties
    - mps
    image:
      name: informaticsmatters/squonk2-chemaxon
      tag: latest
      project-directory: /data
      working-directory: /data
      fix-permissions: true
      file:
      - name: /usr/local/license.cxl
        content-from:
          account-server-asset:
            name: chemaxon-license-file
      environment:
      - name: CHEMAXON_LICENSE_URL
        value-from:
          constant:
            value: /usr/local/license.cxl
    # The container has no entrypoint so this is the command that is executed.
    # The CLASSPATH environment variable in the container is set.
    command: >-
      java squonk.jobs.chemaxon.AbbvieMPSCalc
      --input '{{ inputFile }}'
      --output '{{ outputFile }}'
      {% if header is defined %}--header {{ header }}{% endif %}
      {% if mode is defined %}--mode {{ mode }}{% endif %}
      {% if minValue is defined %}--min-value {{ minValue }}{% endif %}
      {% if maxValue is defined %}--max-value {{ maxValue }}{% endif %}
    variables:
      order:
        options:
        - outputFile
        - header
        - mode
        - minValue
        - maxValue
      inputs:
        type: object
        required:
        - inputFile
        properties:
          inputFile:
            title: Input molecules
            mime-types:
            - chemical/x-mdl-sdfile
            - squonk/x-smiles
            - text/csv
            type: molecules-smi
      outputs:
        type: object
        properties:
          results:
            title: Output file name
            mime-types:
            - chemical/x-mdl-sdfile
            creates: '{{ outputFile }}'
            type: file
            annotation-properties:
              fields-descriptor:
                origin: squonk2-job
                description: Abbvie MPS prediction
                fields:
                  Abbvie_MPS:
                    type: number
                    description: Abbvie MPS prediction
                    required: false
                    active: true
              service-execution:
                service_ref: 'https://discourse.squonk.it/t/job-cdk-molecular-descriptors/126'
              derived-from: inputFile
      options:
        type: object
        required:
        - outputFile
        properties:
          outputFile:
            title: Output file (.sdf or .smi)
            type: string
            default: output-abbvie-mps.sdf
            pattern: "^[A-Za-z0-9_/\\.\\-]+$"
          header:
            title: Include header for .smi output
            type: boolean
            default: true
          mode:
            title: Filter mode
            type: string
            default: none
            enum:
            - none
            - pass
            - fail
          minValue:
            title: Min value
            type: number
          maxValue:
            title: Max value
            type: number
    tests:
      simple-execution:
        inputs:
          inputFile: data/dhfr_3d-10.sdf
        options:
          outputFile: foo/abbvie_mps.sdf
          mode: pass
          minValue: 4
          maxValue: 8
        checks:
          exitCode: 0
          outputs:
          - name: foo/abbvie_mps.sdf
            checks:
            - exists: true

  chemaxon-pfizer-cns-mpo:
    name: Pfizer CNS MPO
    description: >-
      Pfizer CNS multiparametric score prediction using ChemAxon tools.
    version: '1.0.0'
    category: molecular properties
    keywords:
    - chemaxon
    - properties
    - cns
    - mpo
    image:
      name: informaticsmatters/squonk2-chemaxon
      tag: latest
      project-directory: /data
      working-directory: /data
      fix-permissions: true
      file:
      - name: /usr/local/license.cxl
        content-from:
          account-server-asset:
            name: chemaxon-license-file
      environment:
      - name: CHEMAXON_LICENSE_URL
        value-from:
          constant:
            value: /usr/local/license.cxl
    # The container has no entrypoint so this is the command that is executed.
    # The CLASSPATH environment variable in the container is set.
    command: >-
      java squonk.jobs.chemaxon.PfizerCNSMPOCalc
      --input '{{ inputFile }}'
      --output '{{ outputFile }}'
      {% if header is defined %}--header {{ header }}{% endif %}
      {% if mode is defined %}--mode {{ mode }}{% endif %}
      {% if minValue is defined %}--min-value {{ minValue }}{% endif %}
      {% if maxValue is defined %}--max-value {{ maxValue }}{% endif %}
    variables:
      order:
        options:
        - outputFile
        - header
        - mode
        - minValue
        - maxValue
      inputs:
        type: object
        required:
        - inputFile
        properties:
          inputFile:
            title: Input molecules
            mime-types:
            - chemical/x-mdl-sdfile
            - squonk/x-smiles
            - text/csv
            type: molecules-smi
      outputs:
        type: object
        properties:
          results:
            title: Output file name
            mime-types:
            - chemical/x-mdl-sdfile
            creates: '{{ outputFile }}'
            type: file
            annotation-properties:
              fields-descriptor:
                origin: squonk2-job
                description: Pfizer CNS MPO prediction
                fields:
                  Pfizer_CNS_MPO:
                    type: number
                    description: Pfizer CNS MPO prediction
                    required: false
                    active: true
              derived-from: inputFile
      options:
        type: object
        required:
        - outputFile
        properties:
          outputFile:
            title: Output file (.sdf or .smi)
            type: string
            default: output-pfizer-cns-mpo.sdf
            pattern: "^[A-Za-z0-9_/\\.\\-]+$"
          header:
            title: Include header for .smi output
            type: boolean
            default: true
          mode:
            title: Filter mode
            type: string
            default: none
            enum:
            - none
            - pass
            - fail
          minValue:
            title: Min value
            type: number
          maxValue:
            title: Max value
            type: number
    tests:
      simple-execution:
        inputs:
          inputFile: data/dhfr_3d-10.sdf
        options:
          outputFile: foo/cns_mpo.sdf
          mode: pass
          minValue: 4
          maxValue: 8
        checks:
          exitCode: 0
          outputs:
          - name: foo/cns_mpo.sdf
            checks:
            - exists: true

  chemaxon-kids-mpo:
    name: KIDS MPO
    description: >-
      KIDS multiparametric score prediction for kinase drugs using ChemAxon tools.
    version: '1.0.0'
    category: molecular properties
    keywords:
    - chemaxon
    - properties
    - kinase
    - kids
    - mpo
    image:
      name: informaticsmatters/squonk2-chemaxon
      tag: latest
      project-directory: /data
      working-directory: /data
      fix-permissions: true
      file:
      - name: /usr/local/license.cxl
        content-from:
          account-server-asset:
            name: chemaxon-license-file
      environment:
      - name: CHEMAXON_LICENSE_URL
        value-from:
          constant:
            value: /usr/local/license.cxl
    # The container has no entrypoint so this is the command that is executed.
    # The CLASSPATH environment variable in the container is set.
    command: >-
      java squonk.jobs.chemaxon.KidsMPOCalc
      --input '{{ inputFile }}'
      --output '{{ outputFile }}'
      {% if header is defined %}--header {{ header }}{% endif %}
      {% if mode is defined %}--mode {{ mode }}{% endif %}
      {% if minValue is defined %}--min-value {{ minValue }}{% endif %}
      {% if maxValue is defined %}--max-value {{ maxValue }}{% endif %}
    variables:
      order:
        options:
        - outputFile
        - header
        - mode
        - minValue
        - maxValue
      inputs:
        type: object
        required:
        - inputFile
        properties:
          inputFile:
            title: Input molecules
            mime-types:
            - chemical/x-mdl-sdfile
            - squonk/x-smiles
            - text/csv
            type: molecules-smi
      outputs:
        type: object
        properties:
          results:
            title: Output file name
            mime-types:
            - chemical/x-mdl-sdfile
            creates: '{{ outputFile }}'
            type: file
            annotation-properties:
              fields-descriptor:
                origin: squonk2-job
                description: KIDS MPO prediction
                fields:
                  KIDS_MPO:
                    type: number
                    description: KIDS MPO prediction
                    required: false
                    active: true
              derived-from: inputFile
      options:
        type: object
        required:
        - outputFile
        properties:
          outputFile:
            title: Output file (.sdf or .smi)
            type: string
            default: output-kids-mpo.sdf
            pattern: "^[A-Za-z0-9_/\\.\\-]+$"
          header:
            title: Include header for .smi output
            type: boolean
            default: true
          mode:
            title: Filter mode
            type: string
            default: none
            enum:
            - none
            - pass
            - fail
          minValue:
            title: Min value
            type: number
          maxValue:
            title: Max value
            type: number
    tests:
      simple-execution:
        inputs:
          inputFile: data/dhfr_3d-10.sdf
        options:
          outputFile: foo/kids_mpo.sdf
          mode: pass
          minValue: 4
          maxValue: 8
        checks:
          exitCode: 0
          outputs:
          - name: foo/kids_mpo.sdf
            checks:
            - exists: true
